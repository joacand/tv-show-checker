<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEACAAYEwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAEt9J
        REFUeJzt3Wtz3MaZBeCD63BmOBeK1CVO7F1npY2dVOVv5B/kj++mdstWnNhZKVYkzv2KBhr7YTQSRVPk
        zOAF0I0+zxdXpaImien3TDfQ6Pb++Kc/g4jcFNb9C1Axg3aU1/Wzp2vl1fWzSQYDwAJ1Fvl97vu9GA52
        YAAYxtRiP9ZdfwdDwTwMgJo1peAPcftvZSDUjwFQMZcK/iEMhPoxACrAoj/MzevEMKgGA6AkLPpiGAbV
        YAAIYtGXg2FQHgZAQSz6ajEMZDEATsTCr9/+M2AQnI4BcAQWvZk4KjgdA+AALHx7cFRwHAbAPVj49mIQ
        HIYBcAcWfnMwCO7HALiBhd9cDIK7MQDAwncJg+BTft2/QN1Y/G7i577j7AiAHYA4GnAwAFj4dJvLQeDU
        FIDFT/dxsX84MQJw8YOl07g2Gmj8CIDFT6dwpd80dgTgygdI5XFhNNDIEQCLnyQ1uT81agTQ5A+K6tXU
        0UBjRgAsfqpC0/pZIwKgaR8Kma1J/c3qKUCTPgiyS1OmBNaOAFj8ZALb+6GVAWD7Radmsbk/WhcANl9s
        ai5b+6VVAWDrRSY32Ng/rQkAGy8uuce2fmr8UwDbLiiRTU8IjB4BsPjJZjb0X2MDwIaLR/QQ0/uxkQFg
        +kUjOobJ/dm4ADD5YhGdytR+bVQAmHqRiCSY2L+NCQATLw6RNNP6uREBYNpFISqTSf3diAAgonrUHgAm
        pSFRVUzp97UGgCkXgagOJvT/2gLAhD+eqG5110EtAVD3H01kkjrrofIAYPET/VJddVFpALD4iT6vjvqo
        /SkAEdWnsgDgtz/Rw6quk0oCgMVPdLgq66X0AGDxEx2vqrrhPQAih5UaAPz2JzpdFfVTWgCw+ImKK7uO
        OAUgclgpAcBvfyI5ZdaTeACw+InklVVXnAIQOUw0APjtT1SeMupLLABY/ETlk64zTgGIHHb7cNCT02W6
        VgV/FSI6UNFRwIdDSzkCIHIYA4DIYQwAIocxAIgcxgAgchgDgMhhDAAihzEAiBzGACByGAOAyGEMACKH
        MQCIHMYAIHIYA4DIYQwAIocxAIgcxgAgchgDgMhhDAAihzEAiBzGACByGAOAyGEMACKHMQCIHMYAIHIY
        A4DIYQwAIofdPhuwEn6njbMvvqjjRxtFjcdQ1yMEvR5aT5+ItZut19i+ei3WnpSg30Pridzfuf7HP5Bv
        E7H2XFRLAHhRhHAwrONHGyVbbwAAerNB2B8AnvfAvzhM0Otj+/pnINci7UmJLi/FPvc8SVj8AjgFMECu
        FNLVUqw9z/cRXfTF2pMS9uR+JzWdirXlMgaAIdLRSLS9sG/WCMs/78KPIrH2EuHr5SoGgCHU9RjIix77
        /lHY64m1JSESnPLpzRZ6sRBrz2UMAEPkWYp0MRdrz4tj+J2OWHtFhQPB4f9sItaW6xgABlET2Y4dXVyI
        tncqL4oQtOXCSF1fi7XlOgaAQdLrEaDl7tyHfTNuBEoGUbbZQK/WYu25jgFgkDzLkM7l5rZBpwMvlrvx
        dqpwMBBrKxUeJbmOAWAYNR2LthfWPQ3wfATnXbHm1Lt3Ym0RA8A46WiEXHAaEPXkvn1PEQ4H8PxApK1s
        tYLebkXaoh0GgGHyTCOdyz0NCHrnYisMTxEJDv/VlMN/aQwAA6VjuWmA5/sIh/WNAiTXI3D4L48BYCA1
        HiHXmVh7kjfhjuF3OvDiWKStbLlEniiRtugjBoCJdC46DYgE1+Af9XMFb0AqwVERfVTL24D5NkFS4nAu
        Gg7hhcX/tFxrqBLXnGfLz78AlI5GYstn96sC9Wol0t6hAql1CHle6ufgsloCQG822Pz4Y2ntB90OAoEA
        gNal/p73UeMJ2l9lQCBzBz28GCKpMAC8KEQotBQ5WyyQKw7/y8ApgKnyHGo2E2su7Fd7H0By/UHCxT+l
        YQAYTI3lhr1hxasCxR7/aY2Ua/9LwwAwWDqZIM9SsfYqWxXoeQjOz0WaSucL5JncExH6FAPAZDmQTuSm
        AVFFLweFw77Y6j/JURD9EgPAcGoiVwDBeTWrAsX2/dMa6YiP/8pUy1MAOlw6mSNPU5HHmp4fIBwOkI7L
        vakmtfdfNp8hN2xj05u8KILXasGPYnhhAM/3Ad/b/Vdr5PkuxJCl0CpDrhLo7QbQcjs/FcUAMJ6Gmk4Q
        X16JtBYOyg0Av92GL7T6L7k259vfPztD0O8h7HThd9rwW2e7Qj+BVgmyTQK9WiKdz5DNZkBNmcAAsIAa
        jeUCoORVgdGjRyLt5FmGdFJvAAS9LqKLS4SDHvz4TKxdP4rhRzHQO0fr6VPkWQY1GSN58wb6/VbxVWEA
        WCCbzaCVEtlV149j+N0O9LKcRUFhX+bln3Q2Fd0k9WCej/jxJaKrK9FtzO79kUGA+PIK8aNLrP7+t0rv
        ezAALJHOZogvL0XaCodDJCUEgB+GYkWjKr/55yN+con42a9Ety8/iuftRgYV4lMAS0huhBmVtCoweHQh
        8pQhT1OkFb77H56fo/uHb3H25Vf1FX9NOAKwRDafQyeJyA22oN2GF4XIldwiI0BuuXE6nVZyU8yDj9Zv
        fo34yeNaN02pE0cAFkml9sP3PPFVgR58REKr/6p488+LQnS++R3ip0+cLX6AAWAVycdiklt1AUAw7Im8
        uaiVQir4EtRd/PYZut98i6BrzsEpdWEAWEQvFruFJAKkVwWGQ5kRRdlzf7/TQfc/vxFbq2A7BoBl0qnM
        t+NuVaDcmoBQaOtvdV3e8N8/O0P3xQt4ocx7Ck3AALBMMpJ7GhD2Zb61/fYZ/FbxhTI62SIr6dBPLwrR
        efFCZEl1kzAALKOXK+hEZhogtWhHavWfmkxF2rlL++vfcth/BwaAhdRYplD8OIbfaRduJzwXWv1X0sYf
        rS++MO64dFNwPGQhNbpG6+lTkbaii0fYrl6d/O+9IETQLT7/15sNshL2LPTPztB69ky83bvkSkGrLbJE
        AVm2e+vP9+H5HrwoRhDHYtukS2EAWEiv1sg2GwRnxefdYb+P7avTAyC8GIo8TZA+Gn3v7MsvS33Ony4W
        UJMJ0vEYeZI8+P/3ogjhcIBwOEB03gdOfKNQCgPAUmoyRvDsV4Xb2a0KjE7edTcSOnVIcqnzXjgclHZE
        uppOsX396uijynOloN6+g3r7DpsoQvzkCeLHV/CCekqR9wAslUo9LiuyKtADAoH5f7ZeQW/kX4MtY+if
        K4XVX19i/fLl0cV/V1vbV6+w+K//RvLubS1vP3IEYCm92SBbrxG0i9/Ei/p9qH/96+h/F/QG8ARW/5Ux
        /Pe7HQRdmaXJe9l6hfXLv0IfMNQ/Rp5l2Pz4024JtF9tSTIALJZOJyIB8GFV4JHfQNGF0PD/nfzwv/VY
        5ibpXrbZYPXdd8jT8nYozublrIG4D6cAFpM6LdcLgpMOEA3Pi8+vd4d+yn6jwgPCgdzcP89SrL7/vtTi
        rwsDwGJ6m4g9Ojv2CHG/3YZ/1ir8c8sY/gd9mbMh99Y//SQfUoZgAFhOat+8Y/cKPDYw7pTnUNfyh8RK
        TU0AIFsuGr01OQPAconQu/PHrgo8ZcpwW7paim9KAgCB0KGkALB5/U+xtkzEALBcvk3EXqCJDnwc6AUB
        wk7x1X9qXMI3q+8hOCt+YxR4/6Sl5L0J6sYAaAA1lXk3IOwd9q0eSuz9l+elrP0Pz3tiK/+U0KvXJmMA
        NIAaXYssIgk6u1WBD5FYXZfO56XcVfcFlkfvZbPy3k40BQOgAfJEIV0uizd00KpAX+Ttv1KG/wC8VvEn
        EwCAPK/luXzVGAANIfU47aEtw8P+eeFHbLnOkJZ06q/fktnWO1fK6HMJpTAAGiK7FpoGnHfvnUOHAo/Y
        0sUceVZOcfmhTADo9LSXo2zDAGgInaZQi+LTgIdWBUqs/lNlHvrpyXTpPGveqr+7MAAaRGpRUDQc3vm/
        +61W8ZtsWVbq6cSnntj7CwYd4V0mBkCDpFJPAz6zfVb4qPgmomo2A8qcW0tt/uHIYSEMgAbJ0wzpfF64
        HT+O71xNJ3GYiCrp5t8HUl/cNe/UUxU3/kqHSD1eCy9uTQMCH0HB1X95miItaeuvDz8jl5m7e5Ebb8oz
        ABpGjcbIdfEh9u3FPtGw+Oo/VcWhn0K76kg9TTAdA6BpdIZMYBoQtDufnKDzufsCxyh9+A+IrS70ggC+
        wGYrpmMANJCSeBrgeQgHH6cBYcHttbRSyCpYW69P3Nz0LmFPdksxEzEAGii9HiPXxb8Jg/cF4MVR4c0/
        UqEXlh4idXgqgE8CsKkYAA2U51rkacD+wA+JQlCCZxreJ1sJBkCv1/jjxBgADaUENgoJWmeA5yPoFttg
        Qyeqshdrsvlcbnttz0P0THZzUdMwABoqHU+LL2f1PATn7cInEInckziUzqC3W7Hm4ssr+FJvGBqIAdBU
        uYaaF7/p5p+14cXFCqCq4f+exPRnz/N9tL/+Gk0tlWb+VQQAImvu/bM2/AM2CfkcvdlAL+UP/byP1D6J
        e0G3i/a/fyXapikYAA2WjSaFn4vHV1eF/r2alrvy7y56sYDeyE0DACC6vETr374UbfO2cDCQ2W35CAyA
        BsuhkRacBhR9uy4t4dSfQ6iR/Hbjrasn6Lx4Ib5M2G+30X7+HJ3nz+G35LY0O+hnV/rTqHISTwNOpde7
        Y8zrsH3ztpR3+sN+H+e//wNaz54W3nsg6PXQfv4fOP/2W5EXrU7hxhsPDkunE+RpKnpSzqHqGP5/oDMk
        b9+WckKwF4Zo/fo3iJ89gxpPoMZj6NkCOe5/B8ODD7/fRdgfIhoMRE5WKooB0HT57iWc+PKy8h+t3soP
        w4+RvP4n4keP4JW0mMcLQsRXV7v7JFpDb7fQSbLbTmy/oYjvwY8ieFG0O6/AsH0GGAAOSMejygMgWy3F
        j9E+Vp5rrF/9Hzpf/7b8H+b7u/MSLXuBiPcAHJBOF8gFX5I5hJqYsad+OhqXtgV5EzAAnKCRVnnEVUmH
        fp5q87e/Q9d0M9J0DABHJBWuxstWS+SJOdtq57nG6ocfkDuy1fcxGACOyGZz0Xfl76MMPE5br9dYvfzB
        me2+D8UAcEhaxWO5PIe6rm/twX2y5QLrly+Rp/JHktuKAeAQ9a78wtyd+mNugaWLBZbffVf7EwpTMAAc
        ki0XpXd8E4f/t+n1Gsv//Z/Cy6SbgAHgmDJX5+VaWxEAAJCrFKvvvsfm1SuRXZRtxQBwTFriuXzZbA4I
        7EVYpeTnn7H8y1+gpoYEV8UnEnMloGOy5QJ6uy1ll5tKd/4RpJME65c/YHt+jtazp7sj0itespttN0je
        vIF6W+0NVAaAg9RkitbTJ6Jt5llmzfD/c/RigfXLBbZxjOjx490LOyUu7c2VgprPkF6Pql2odYP3xz/9
        +ZPfqZbfgshQfitGOLxA0O0g6HR3uwSfMDrIdYZ8myDbbqCXS6jZHHpV7U5JN3z4AzgCILqH3iZI3ry5
        8b/48FshvFYbfhzB8z0gCOH53vubie//m6bIdYo8yaA3G2MfjTIAiI6iobcJsE1g1+3Ou/EpAJHDGABE
        DmMAEDmMAUDkMAYAkcMYAEQOYwAQOYwBQOQwBgCRwxgARA5jABA5jAFA5DAGAJHDGABEDmMAEDmMAUDk
        MAYAkcMYAEQOYwAQOYwBQOQwBgCRwxgARA5jABA5jAFA5DAGAJHDGABEDrt9NJj4mciDdsQDR4lOMF2r
        0s8oL30EUMUfQdQ0VdVNJVMAhgDR4aqsl8ruATAEiB5WdZ3wJiCRwyoNAI4CiD6vjvqofATAECD6pbrq
        opYpAEOA6KM666G2ewAMAaL666DWm4B1//FEdTKh/9f+FMCEi0BUNVP6fe0BQET1MSIATElDoiqY1N+N
        CADArItCVBbT+rkxAQCYd3GIJJnYv40KAMDMi0RUlKn92rgAAMy9WESnMLk/GxkAgNkXjehQpvdjYwMA
        MP/iEd3Hhv57e0sw4+wvIrcWI1vYUPh7Ro8AbrLpopK7bOun1gQAYN/FJbfY2D+tCgDAzotMzWdrv7Qu
        AAB7LzY1k8390coAAOy+6NQctvdD458C3IdPCKguthf+nrUjgJua8mGQHZrU3xoRAECzPhQyV9P6mdVT
        gNs4JaCyNK3w9xozAripqR8W1aPJ/alRI4CbOBqgoppc+HuNHAHc5MKHSPJc6TeNHQHcxNEAHcqVwt9r
        /AjgJtc+XDqOi/3DiRHATRwN0G0uFv6ecwGwxyAglwt/z6kpwF3YCdzEz33H2RHATRwNuIOF/ykGwA0M
        guZi4d+NAXAHBkFzsPDvxwC4B4PAXiz8wzAADsAgsAcL/zgMgCPc7FwMA3Ow6E/HADgRRwX1Y+EXxwAo
        iKOCarHoZTEABDEMysGiLw8DoCQMg2JY9NVgAFSAYXAYFn31GAAVu93JXQ4EFnz9GAA1cykQWPDmYQAY
        5q4isTEUWOx2YABY4L5iqjMcWOT2YwBYjkVIRfw/lIDuP0xxWVcAAAAASUVORK5CYII=
</value>
  </data>
</root>